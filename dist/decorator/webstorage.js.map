{"version":3,"file":"webstorage.js","sourceRoot":"","sources":["../../src/decorator/webstorage.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,iBAAiB,EAAC,MAAM,+BAA+B,CAAC;AAEhE,MAAM,UAAU,YAAY,CAAC,GAAY;IACrC,OAAO,UAAU,CAAC,YAAY,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC;AAC/C,CAAC;AAED,MAAM,UAAU,cAAc,CAAC,GAAY;IACvC,OAAO,UAAU,CAAC,cAAc,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC;AACjD,CAAC;AAED,uBAAuB;AACvB,MAAM,KAAK,GAA+B,EAAE,CAAC;AAE7C,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,UAAmB,EAAE,GAAW,EAAE,EAAE;IAC3D,OAAO,CAAC,MAAc,EAAE,YAAoB,EAAQ,EAAE;QAClD,GAAG,GAAG,GAAG,IAAI,YAAY,CAAC;QAE1B,MAAM,WAAW,GAAG,iBAAiB,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;QAE3D,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,YAAY,EAAE;YACxC,GAAG,EAAE;gBACD,OAAO,iBAAiB,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;YAClD,CAAC;YACD,GAAG,EAAE,UAAS,KAAU;gBACpB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;oBACb,sBAAsB;oBACtB,IAAI,WAAW,KAAK,IAAI,EAAE;wBACtB,qDAAqD;wBACrD,iBAAiB,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;qBACjD;oBAED,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;oBAClB,OAAO;iBACV;gBAED,iBAAiB,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;YAClD,CAAC;SACJ,CAAC,CAAC;IACP,CAAC,CAAA;AACL,CAAC,CAAA","sourcesContent":["import {WebStorageUtility} from \"../utility/webstorage.utiltiy\";\n\nexport function LocalStorage(key?: string) {\n    return WebStorage(localStorage, key || '');\n}\n\nexport function SessionStorage(key?: string) {\n    return WebStorage(sessionStorage, key || '');\n}\n\n// initialization cache\nconst cache: { [key: string]: boolean } = {};\n\nexport const WebStorage = (webStorage: Storage, key: string) => {\n    return (target: object, propertyName: string): void => {\n        key = key || propertyName;\n\n        const storedValue = WebStorageUtility.get(webStorage, key);\n\n        Object.defineProperty(target, propertyName, {\n            get: function() {\n                return WebStorageUtility.get(webStorage, key);\n            },\n            set: function(value: any) {\n                if (!cache[key]) {\n                    // first setter handle\n                    if (storedValue === null) {\n                        // if no value in localStorage, set it to initializer\n                        WebStorageUtility.set(webStorage, key, value);\n                    }\n\n                    cache[key] = true;\n                    return;\n                }\n\n                WebStorageUtility.set(webStorage, key, value);\n            },\n        });\n    }\n}\n"]}